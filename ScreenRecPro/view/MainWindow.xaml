<Window x:Class="ScreenRecPro.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ScreenRecPro"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Title="MainWindow" Height="850" Width="1400"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True">

    <Window.Template>
        <ControlTemplate TargetType="Window">
            <Border Background="White" CornerRadius="10">
                <ContentPresenter/>
            </Border>
        </ControlTemplate>
    </Window.Template>



    <Window.Resources>
        <CornerRadius x:Key="LoginPaneCornerRadius">15</CornerRadius>

        <Style TargetType="{x:Type Button}" x:Key="MyButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type TextBox}" x:Key="CustomTextBoxStyle">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="0,85,0,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Width" Value="254" />
            <Setter Property="Height" Value="55" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="10">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <TextBlock x:Name="PlaceholderTextBlock"
                                Text="{TemplateBinding Tag}"
                                Foreground="Gray"
                                Padding="5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="btncutsomstylePlain">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                              Storyboard.TargetProperty="RenderTransform.ScaleX"
                                              To="0.9" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                              Storyboard.TargetProperty="RenderTransform.ScaleY"
                                              To="0.9" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                              Storyboard.TargetProperty="RenderTransform.ScaleX"
                                              To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                              Storyboard.TargetProperty="RenderTransform.ScaleY"
                                              To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type PasswordBox}" x:Key="pwdCustomStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border"
                        CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                  VerticalAlignment="Center"
                                  VerticalScrollBarVisibility="Hidden"
                                  HorizontalScrollBarVisibility="Hidden"
                                  HorizontalAlignment="Center" Width="234" Height="46" RenderTransformOrigin="0.5,0.5" >
                                <ScrollViewer.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ScrollViewer.RenderTransform>
                            </ScrollViewer>
                            <!-- Optional margin for spacing -->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





        <Style TargetType="{x:Type Button}" x:Key="btncutsomstyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}"
         BorderBrush="{TemplateBinding BorderBrush}"
         BorderThickness="{TemplateBinding BorderThickness}"
         RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                      Storyboard.TargetProperty="RenderTransform.ScaleX"
                                      To="0.9" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                      Storyboard.TargetProperty="RenderTransform.ScaleY"
                                      To="0.9" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                      Storyboard.TargetProperty="RenderTransform.ScaleX"
                                      To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                      Storyboard.TargetProperty="RenderTransform.ScaleY"
                                      To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="border" Property="BorderBrush" Value="#FFEAEAEA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

 

    </Window.Resources>

    <Grid>
        <Grid>


            <Grid x:Name="loadingScreen" Margin="38,91,36,43" Visibility="Visible" IsVisibleChanged="resetStatusFromLoading" Loaded="readyRun">

                <Image x:Name="logoImage" 
               HorizontalAlignment="Left" 
               Height="120" 
               Margin="552,262,0,0" 
               VerticalAlignment="Top" 
               Width="259" 
               Source="/view/logo.jpg"
               Opacity="0">
                    <!-- Define the storyboard directly within the Image's Resources -->
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Image.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0"
                                To="1"
                                Duration="0:0:2">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseIn" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>

                <!--<Image HorizontalAlignment="Left" Height="120" Margin="552,262,0,0" VerticalAlignment="Top" Width="259" Source="pack://application:,,,/view/logo.jpg"/>-->
                <Image gif:ImageBehavior.AnimatedSource="/view/loading.gif" Grid.Column="0" Margin="505,322,505,222" Stretch="UniformToFill">
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Image.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:2">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseIn" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>
            </Grid>
            <Grid x:Name="introScreen" Margin="38,91,36,43" Visibility="Hidden" Opacity="0">
                <TextBlock x:Name="welcomeText" Text="Welcome Back!" FontSize="36" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,307,0,0"/>
                <TextBlock x:Name="welcomeSubText" Text="We’re happy to see you again. Let’s continue making great progress together." FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,372,0,0" Foreground="#FFBBBBBB"/>

                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Self}}" Value="Visible">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    From="0"
                                    To="1"
                                    Duration="0:0:3"
                                    AutoReverse="True"
                                    RepeatBehavior="1x" />
                                            <!-- 
                                    AutoReverse="True" causes the opacity to go back to 0 after reaching 1. 
                                    RepeatBehavior="1x" specifies that it should run the animation once (forward and reverse).
                                -->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <Grid x:Name="loginScreen" Margin="38,91,36,43" Visibility="Hidden">
                <Grid.Background>
                    <ImageBrush ImageSource="/view/World-Map.png" Stretch="Uniform" Opacity="0.2"/>
                </Grid.Background>
                <Grid x:Name="login_pane" VerticalAlignment="Center" HorizontalAlignment="Center" Height="224">
                    <!--<Button Style="{StaticResource RoundButtonStyle}" Content="Login" Margin="68,366,68,78" Background="{x:Null}" Cursor="Hand"/>-->
                    <TextBox x:Name="uname" Style="{StaticResource CustomTextBoxStyle}" Margin="0,18,0,0" TextWrapping="Wrap"  Width="254" Height="55" Background="{x:Null}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" BorderBrush="#FFD2D2D2" FontSize="14" />

                    <PasswordBox x:Name="pwd"
             Width="254"
             Height="55"
             VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center"
             BorderBrush="#FFD2D2D2"
             FontSize="14"
             Margin="0,94,0,75"
             Background="{x:Null}"
             Style="{StaticResource pwdCustomStyle}"/>


                    <Button Content="Login" 
                            HorizontalAlignment="Center" 
                            Height="38" 
                            Margin="0,176,0,0" 
                            VerticalAlignment="Top" 
                            VerticalContentAlignment="Center" 
                            Width="254"
                            Cursor="Hand" Click="login">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#F0A459"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFF38820"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="Password" HorizontalAlignment="Left" Margin="15,86,0,0" VerticalAlignment="Top" Foreground="#FF9E9E9E" Background="White" Width="59" Height="16" Padding="5,0,5,0" Grid.IsSharedSizeScope="True"/>

                    <Label Content="Username" HorizontalAlignment="Left" Margin="15,10,0,0" VerticalAlignment="Top" Foreground="#FF9E9E9E" Padding="5,0,5,0" Background="White"/>
                </Grid>
                <Image HorizontalAlignment="Center" Height="58" Margin="0,151,0,0" VerticalAlignment="Top" Width="100" Source="/view/logo.jpg">
                    <Image.OpacityMask>
                        <ImageBrush ImageSource="/view/logo.jpg"/>
                    </Image.OpacityMask>
                </Image>
            </Grid>
            <Grid x:Name="welcomeScreen" Margin="38,91,36,43" Visibility="Hidden">

                <Grid HorizontalAlignment="Center" Height="107" Margin="0,10,0,0" VerticalAlignment="Top" Width="1306">
                    <!--control panel-->

                    <Button x:Name="Home" Style="{StaticResource btncutsomstylePlain}" HorizontalAlignment="Right" Margin="0,54,138,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="38" Height="34" Click="clickHome" Background="{x:Null}">
                        <Image Source="/view/house-chimney-blank.png" />
                    </Button>

                    <Button x:Name="Settings" Style="{StaticResource btncutsomstylePlain}" HorizontalAlignment="Right" Margin="0,54,84,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="38" Height="34" Click="clickSettings" Background="{x:Null}">
                        <Image Source="/view/settings (3).png" />
                    </Button>

                    <Button x:Name="information" Style="{StaticResource btncutsomstylePlain}" HorizontalAlignment="Right" Margin="0,54,32,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="38" Height="34" Click="clickinfo" Background="{x:Null}">
                        <Image Source="/view/comment-info (1).png" />
                    </Button>

                    <Label x:Name="headTile" Content="Home" HorizontalAlignment="Left" Margin="27,0,0,0" VerticalAlignment="Top" FontSize="36"/>
                    <TextBlock x:Name="infoTile" HorizontalAlignment="Left" Margin="36,62,0,0" TextWrapping="Wrap" Text="Welcome to SnapShot! Capture, organize, and share your screen effortlessly. Enhance your productivity with powerful features designed for a seamless screenshot experience." VerticalAlignment="Top" Height="46" Width="506" Foreground="#FF909090" RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform AngleX="0.796"/>
                                <RotateTransform/>
                                <TranslateTransform X="0.319"/>
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <Border x:Name="homeActive" HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="1139,92,0,0"
                Width="20"
                Height="4"
                Background="#FFF3892F"
                CornerRadius="1.5"/>


                    <Border x:Name="SettingsActive" HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="1193,92,0,0"
                Width="20"
                Height="4"
                Background="#FFF3892F"
                CornerRadius="1.5"
                Visibility="Hidden"
                            />

                    <Border x:Name="infoActive" HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="1245,92,0,0"
                Width="20"
                Height="4"
                Background="#FFF3892F"
                CornerRadius="1.5"
                Visibility="Hidden"                           
                            />


                </Grid>

                <Grid x:Name="homePane" HorizontalAlignment="Center" Height="594" Margin="0,117,0,0" VerticalAlignment="Top" Width="1306">

                    <Button x:Name="play" Style="{StaticResource btncutsomstylePlain}" HorizontalAlignment="Right" Margin="0,138,670,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="198" Height="178" Click="playAction" Background="{x:Null}">
                        <Image x:Name="src1" Source="/view/play.png" RenderTransformOrigin="-4.281,2.969" />
                    </Button>

                    <Button x:Name="pause" Visibility="Hidden" Style="{StaticResource btncutsomstylePlain}" HorizontalAlignment="Right" Margin="0,138,670,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="198" Height="178" Click="pauseAction" Background="{x:Null}">
                        <Image x:Name="src2" Source="/view/pause.png" RenderTransformOrigin="-4.281,2.969" />
                    </Button>

                    <Button x:Name="stop" Style="{StaticResource btncutsomstylePlain}" HorizontalAlignment="Right" Margin="0,138,455,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="198" Height="178" Click="stopAction" Background="{x:Null}">
                        <Image x:Name="src3" Source="/view/stop.png" RenderTransformOrigin="-4.281,2.969" />
                    </Button>

                    <Rectangle HorizontalAlignment="Left" Height="106" Margin="673,403,0,0" VerticalAlignment="Top" Width="2">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="Black" Opacity="0.6"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Label Content="Taking Screenshots" HorizontalAlignment="Left" Margin="295,412,0,0" VerticalAlignment="Top" FontSize="36"/>
                    <Label x:Name="timerStatus" Content="Stopped" HorizontalAlignment="Left" Margin="402,464,0,0" VerticalAlignment="Top" FontSize="18" Foreground="#FF949494" Width="177" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>

                    <!--stop screenshot service-->
                    <Ellipse x:Name="bgEc" HorizontalAlignment="Left" Height="13" Margin="584,475,0,0" VerticalAlignment="Top" Width="13" Fill="Gray"/>
                    <!--run screenshot service-->
                    <Ellipse x:Name="BlinkingEllipse"
             HorizontalAlignment="Left" Height="13" Margin="584,475,0,0"
             VerticalAlignment="Top" Width="13" Fill="Gray">
                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Ellipse.Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <!-- Animation for fading out -->
                                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="1.0" To="0.0"
                            Duration="0:0:0.5"
                            AutoReverse="True"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                    <Label Content="Playing" HorizontalAlignment="Left" Margin="752,445,0,0" VerticalAlignment="Top" FontSize="18"/>
                    <Label x:Name="processLabel" Content="C:Unkown??" HorizontalAlignment="Left" Margin="752,468,0,0" VerticalAlignment="Top" FontSize="20" Foreground="#FF989898" FontWeight="ExtraLight"/>
                    <Label x:Name="timeLabel"
               Content="00:00:00"
               FontSize="36"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               FontWeight="Bold"
               HorizontalContentAlignment="Center" Margin="748,403,0,0"/>

                </Grid>

                <Grid x:Name="settingsPane" Visibility="Hidden" HorizontalAlignment="Center" Height="594" Margin="0,117,0,0" VerticalAlignment="Top" Width="1306">

                    <Label Content="Settings" HorizontalAlignment="Left" Margin="653,0,0,0" VerticalAlignment="Center"/>

                </Grid>

                <Grid x:Name="infoPane" Visibility="Hidden" HorizontalAlignment="Center" Height="594" Margin="0,117,0,0" VerticalAlignment="Top" Width="1306">

                    <Label Content="info" HorizontalAlignment="Left" Margin="653,0,0,0" VerticalAlignment="Center"/>
                </Grid>

            </Grid>

            <!-- close button -->
            <Button x:Name="exitBtn" Style="{StaticResource MyButton}" Content="" HorizontalAlignment="Right" Margin="0,20,20,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="32" Height="32" Click="exitEvent">
                <Button.Background>
                    <ImageBrush ImageSource="/view/cancel.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>

            <Label x:Name="statusLabel" Content="Checking dependencies..." HorizontalAlignment="Center" Margin="0,808,0,0" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>

            <Button x:Name="minimizeBtn" Style="{StaticResource MyButton}" Content="" HorizontalAlignment="Right" Margin="0,20,62,0" Cursor="Hand" VerticalAlignment="Top" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="32" Height="32" Click="minimizeEvent">
                <Button.Background>
                    <ImageBrush ImageSource="/view/minimize.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
        </Grid>
    </Grid>
</Window>
